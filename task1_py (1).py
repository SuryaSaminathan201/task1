# -*- coding: utf-8 -*-
"""task1.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JRGGNNA1VtEXY0yqd9lwv0FL0-WivoPA
"""

# Step 1: Upload the CSV
from google.colab import files
import pandas as pd
import os

uploaded = files.upload()  # Upload your student_dataset.csv

# Step 2: Load dataset
df = pd.read_csv("student_dataset.csv")
print("Original Data:")
print(df.head())

# Step 3: Check for nulls
print("\nMissing Values:\n", df.isnull().sum())

# Step 4: Remove duplicates
df = df.drop_duplicates()

# Step 5: Standardize text fields
df['Gender'] = df['Gender'].str.strip().str.title()
df['Major'] = df['Major'].str.strip().str.title()

# Step 6: Rename columns to lowercase with underscores
df.columns = df.columns.str.strip().str.lower().str.replace(" ", "_")

# Step 7: Verify data types
print("\nData Types:\n", df.dtypes)

# Step 8: Save cleaned dataset
cleaned_path = "cleaned_student_dataset.csv"
df.to_csv(cleaned_path, index=False)

# Step 9: Create README.md content
readme_content = """# Cleaned Student Dataset

This repository contains a cleaned version of a fictional student dataset.

##  File

- `cleaned_student_dataset.csv`: The cleaned dataset with 100 student records.

##  Cleaning Summary

- Removed duplicates (0 found).
- No missing values detected.
- Standardized text fields: `Gender`, `Major`.
- Renamed columns to snake_case format.
- Verified data types (`age` as int, `gpa` as float, etc.).

##  Columns

| Column Name       | Description                    |
|-------------------|--------------------------------|
| student_id        | Unique ID for each student     |
| name              | Full name of student           |
| age               | Student's age                  |
| gender            | Gender (Male, Female, Non-Binary) |
| major             | Student's major field          |
| gpa               | Grade Point Average            |
| enrollment_year   | Year of enrollment             |
| graduation_year   | Year of graduation             |

##  Usage

You can use this dataset for data cleaning, visualization, and machine learning practice.

##  Author

Surya Saminathan
"""

# Step 10: Save README.md
with open("README.md", "w") as f:
    f.write(readme_content)

# Step 11: Download the cleaned CSV and README.md
files.download("cleaned_student_dataset.csv")
files.download("README.md")